[{"title":"Battleship!","date":"2016-08-06T00:05:10.000Z","path":"2016/08/06/Battleship/","text":"推倒需要勇气，重来却需要超常勇气。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647from random import randintboard = []for x in range(5): board.append([&quot;O&quot;] * 5)def print_board(board): for row in board: print &quot; &quot;.join(row) print &quot;Let&apos;s play Battleship!&quot;print_board(board)def random_row(board): return randint(0, len(board) - 1) def random_col(board): return randint(0, len(board[0]) - 1)#ship_row = random_row(board)#ship_col = random_col(board)for turn in range(3): print &quot;Turn&quot;, turn + 1 guess_row = int(raw_input(&quot;Guess Row:&quot;)) guess_col = int(raw_input(&quot;Guess Col:&quot;)) if guess_row == ship_row and guess_col == ship_col: print &quot;Congratulations! You sunk my battleship!&quot; break else: if(guess_row &lt; 0 or guess_row &gt; 4) or (guess_col &lt; 0 or guess_col &gt; 4): print &quot;Oops, that&apos;s not even in the ocean.&quot; elif(board[guess_row][guess_col] == &quot;X&quot;): print &quot;You guessed that one already.&quot; else: print &quot;You missed my battleship!&quot; board[guess_row][guess_col] = &quot;X&quot; print_board(board) if(turn == 2): print &quot;Game Over!&quot; print &quot;ship_row&quot;, ship_row print &quot;ship_col&quot;, ship_col 推倒重来，这里指在每一次的练习中，将之前的成果回炉重造。 跟着英文教程学完一个小游戏的编写，大约50行代码。由于英语水平差，学到末尾才大概弄清楚游戏内容，对于代码只有极其模糊的印象。然后仔细研究了一番代码，在脑中按照代码从上至下的顺序理顺了逻辑关系后，推倒重来。 因为很多小细节被忽略了，重来时总是喜欢卡壳，在脑中搜寻无果后只得去查找。写着写着又发现不对劲了，突然意识到了自己是在记程序，回忆了一下教程，也不是教我从上到下一直写下来，而是为了实现游戏的功能，上下增增减减，最终才调试完成。 又一次回炉，从游戏出发，慢慢推进，在脑中反复演练，用相应的代码实现相应的功能。脑中演练完毕，换动手操作，操作过程又是错误连连。一部分原因是因为思考时没落实到具体细节，写的时候，小问题不断凸显出来；一部分原因是因为敲代码时粗心，敲错了代码；最主要的原因是没能理清楚游戏与程序的关系，以及它们的来龙去脉，才导致犯错误。 一个极其简单的游戏，约50行代码，推倒重来将近5次，才勉强达到及格水平。期间每一次的卡壳，都伴随着一次小突破。教程是一步一步跟进，只有推倒重来，才能将部分融合为整体。如果跟着教程走到了末尾，省略了推倒重来的步骤，点击进入下一课，亦或者，跟着教程编出了那个游戏，就沾沾自喜，玩那个游戏玩的不亦乐乎，向他人炫耀自己编程了一个游戏，沉浸在这个不属于自己的结果中，收获不言而明。 在编程上，不求通过，但求报错，甚至主动去出错，比如推倒重来。踏平的坑坑洼洼越多越好，这样才能铺出又远又好走的康庄大道。 推倒重来，不光应用于编程，在很多方面都可以起到极大的效果。例如反复精读一本好书、看一篇好文章，也是推倒重来的应用。读完一本书，如果不能讲出一个大概，跟没看的人比起来没多大区别，看过后，能讲出个所以然，勉强能达到及格水平，将书中的内容应用到生活中，才算真正读懂了书。 推倒需要勇气，重来却需要超常勇气。 文|破冰少年2016-08-06","tags":[{"name":"Python","slug":"Python","permalink":"https://hchuanhui.github.io/tags/Python/"}]},{"title":"欢迎来到ShareLife","date":"2016-08-02T05:39:32.000Z","path":"2016/08/02/欢迎来到ShareLife/","text":"从头再来昨天所有的荣誉，已变成遥远的回忆。勤勤苦苦已度过半生，今夜重又走入风雨。我不能随波浮沉，为了我致爱的亲人。再苦再难也要坚强，只为那些期待眼神。心若在梦就在，天地之间还有真爱看成败人生豪迈，只不过是从头再来-昨天所有的荣誉，已变成遥远的回忆。勤勤苦苦已度过半生，今夜重又走入风雨。我不能随波浮沉，为了我致爱的亲人。再苦再难也要坚强，只为那些期待眼神。-心若在梦就在，天地之间还有真爱看成败人生豪迈，只不过是从头再来心若在梦就在，天地之间还有真爱看成败人生豪迈，只不过是从头再来心若在梦就在，天地之间还有真爱看成败人生豪迈，只不过是从头再来心若在梦就在，天地之间还有真爱看成败人生豪迈，只不过是从头再来 我不能随波浮沉，为了我致爱的亲人。再苦再难也要坚强，只为那些期待眼神。心若在梦就在，天地之间还有真爱。看成败人生豪迈，只不过是从头再来。——黄传辉 做事情其实没有那么的难。这个博客是我自己一点一滴部署的，之前一点经验都没有，做到中间被我毁完了，当时很不是滋味，顿了几秒钟，决定从头再来，然后又慢慢开始，直到现在初步搭建完成。 第一个作品，后续接着完善，希望大家留个言鼓励鼓励我吧，嘿嘿~","tags":[{"name":"随笔","slug":"随笔","permalink":"https://hchuanhui.github.io/tags/随笔/"},{"name":"hexo","slug":"hexo","permalink":"https://hchuanhui.github.io/tags/hexo/"}]}]